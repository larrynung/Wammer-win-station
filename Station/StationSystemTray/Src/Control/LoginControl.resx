<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAD6WlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjEgNjQuMTQwOTQ5LCAyMDEwLzEyLzA3LTEwOjU3OjAxICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6
        eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8v
        bnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bXA6Q3JlYXRvclRvb2w9IkFk
        b2JlIFBob3Rvc2hvcCBDUzUuMSBNYWNpbnRvc2giIHhtcDpDcmVhdGVEYXRlPSIyMDEyLTA0LTMwVDA3
        OjA3OjQ2KzA4OjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAxMi0wNS0xMFQwNzozMjozOCswODowMCIgeG1w
        Ok1ldGFkYXRhRGF0ZT0iMjAxMi0wNS0xMFQwNzozMjozOCswODowMCIgZGM6Zm9ybWF0PSJpbWFnZS9w
        bmciIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NzUxQjBGN0M4Q0JGMTFFMTg3MTA5QjY0RTAyNzhG
        ODQiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6NzUxQjBGN0Q4Q0JGMTFFMTg3MTA5QjY0RTAyNzhG
        ODQiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo1OENEMTMwQjhD
        QkUxMUUxODcxMDlCNjRFMDI3OEY4NCIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo1OENEMTMwQzhD
        QkUxMUUxODcxMDlCNjRFMDI3OEY4NCIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6
        eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PmddsnwAAAMxSURBVEhLtVZbSBRRGLYrZBcrHyIqCrrZ
        BaELVJYURb32HEX1ECQpra6uuzszbJkmwq6Zl3XXgizqIeuhJZAgIZEKlsQsTeniurVtaWURbRcqY/u+
        YWaZHWZ3UfDh48yZc/7/+//zX85JO3rSljbRmHACOpCKZDI2TQPSgQwgUwPO+Z/rk5KdRiISCk2nYp/V
        tfOJ4Ha/ED09Qanp5xupKYoxgnl3t9BQd7PUuQ375ij7DcmMSKbQQmdx+Yoewd3yWmr6R8WJgPW/MKK5
        wly2TPGM3sfp1ZOQYNYlS9XWl6InkEy5fg2e9XtKKjdAfiYQR6QloavpZ81la0EwOBYCde9z0dNXWuhY
        Dj0ztHHSkjAGCx8LDb7xEKgynUL9VehZoCSErF8loXsZly1V+1PFIJUBSIrftcUVu5RkkBNBJWEaLvbb
        66/rlYTKm6PDLW0y+K2uv7/gi751Xoty5JpW7oG99iJPBZiqJWG+r+kXG4PazVT6beRzNBKJyOA3FXMP
        51/6BmKjVq5XcD+DvlVKbGKezMWPzYOSV64DFR98HbISWhuuuyF/f2rvjJFwzj1c08oh0z5CHzON9RMj
        yTxuEnboj0q1VP2vWq/1xChGAcn7C8q3APPiSDDJHRC937VC4yVBKo9AXw4wX0+S0ys2ho2Oa+hKq+Fx
        0QgjT9BuXhl5wma36a6tplUf+K+BUNLAG5Hctla3KDGZrc+urErzmULk+ahekIEn9CmsDzjlEI8/jqLT
        eVC+Up9drJNFwL5223l/qoJLto7TuAc9e4zqhJXJI8suMInHngru4fEQoSWF8kzCEehZB/Co4iqelS/3
        LmaZVHRKQPseE1GX0BC2FjlKlKwy7F0kkbswsBTYnW8STW22mq6g5E16n6CAR+9Yz/lRZwWQY89aosQi
        doHp7xM2St4HJMoFDiOILp+1+iG66xAqWe4IqIMfj4T6d7esrvuwvhL7DikekICGJrxPtB2ZG3l02cBe
        4CCQD5QCdsACnAAOAAzyeoBHxHsk5c2oEsXueAgx67KAjQDv8+3KyN60WjGGPSrhgyLVa4Vk6muFitgm
        +GLhyDk9ZjtP+lr5D4fyOXHzbo1YAAAAAElFTkSuQmCC
</value>
  </data>
</root>