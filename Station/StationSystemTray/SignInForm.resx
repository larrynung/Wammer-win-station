<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="label1.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Font" type="System.Drawing.Font, System.Drawing">
    <value>Tahoma, 9.75pt, style=Bold</value>
  </data>
  <data name="label1.Location" type="System.Drawing.Point, System.Drawing">
    <value>12, 12</value>
  </data>
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>119, 16</value>
  </data>
  <data name="label1.TabIndex" type="System.Int32, mscorlib">
    <value>0</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Sign in Waveface</value>
  </data>
  <data name="&gt;&gt;label1.Name" xml:space="preserve">
    <value>label1</value>
  </data>
  <data name="&gt;&gt;label1.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;label1.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;label1.ZOrder" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="label2.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="label2.Font" type="System.Drawing.Font, System.Drawing">
    <value>Arial, 9pt, style=Bold</value>
  </data>
  <data name="label2.Location" type="System.Drawing.Point, System.Drawing">
    <value>12, 82</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>38, 15</value>
  </data>
  <data name="label2.TabIndex" type="System.Int32, mscorlib">
    <value>1</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="&gt;&gt;label2.Name" xml:space="preserve">
    <value>label2</value>
  </data>
  <data name="&gt;&gt;label2.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;label2.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;label2.ZOrder" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="label3.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="label3.Font" type="System.Drawing.Font, System.Drawing">
    <value>Arial, 9pt, style=Bold</value>
  </data>
  <data name="label3.Location" type="System.Drawing.Point, System.Drawing">
    <value>12, 125</value>
  </data>
  <data name="label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>65, 15</value>
  </data>
  <data name="label3.TabIndex" type="System.Int32, mscorlib">
    <value>2</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="&gt;&gt;label3.Name" xml:space="preserve">
    <value>label3</value>
  </data>
  <data name="&gt;&gt;label3.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;label3.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;label3.ZOrder" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="txtEmail.Font" type="System.Drawing.Font, System.Drawing">
    <value>Arial, 9pt</value>
  </data>
  <data name="txtEmail.Location" type="System.Drawing.Point, System.Drawing">
    <value>83, 79</value>
  </data>
  <data name="txtEmail.Size" type="System.Drawing.Size, System.Drawing">
    <value>316, 21</value>
  </data>
  <data name="txtEmail.TabIndex" type="System.Int32, mscorlib">
    <value>3</value>
  </data>
  <data name="&gt;&gt;txtEmail.Name" xml:space="preserve">
    <value>txtEmail</value>
  </data>
  <data name="&gt;&gt;txtEmail.Type" xml:space="preserve">
    <value>System.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;txtEmail.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;txtEmail.ZOrder" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="txtPassword.Font" type="System.Drawing.Font, System.Drawing">
    <value>Arial, 9pt</value>
  </data>
  <data name="txtPassword.Location" type="System.Drawing.Point, System.Drawing">
    <value>83, 122</value>
  </data>
  <data name="txtPassword.PasswordChar" type="System.Char, mscorlib" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="txtPassword.Size" type="System.Drawing.Size, System.Drawing">
    <value>316, 21</value>
  </data>
  <data name="txtPassword.TabIndex" type="System.Int32, mscorlib">
    <value>4</value>
  </data>
  <data name="&gt;&gt;txtPassword.Name" xml:space="preserve">
    <value>txtPassword</value>
  </data>
  <data name="&gt;&gt;txtPassword.Type" xml:space="preserve">
    <value>System.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;txtPassword.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;txtPassword.ZOrder" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="btnSignIn.Font" type="System.Drawing.Font, System.Drawing">
    <value>Arial, 9pt</value>
  </data>
  <data name="btnSignIn.Location" type="System.Drawing.Point, System.Drawing">
    <value>312, 167</value>
  </data>
  <data name="btnSignIn.Size" type="System.Drawing.Size, System.Drawing">
    <value>87, 27</value>
  </data>
  <data name="btnSignIn.TabIndex" type="System.Int32, mscorlib">
    <value>5</value>
  </data>
  <data name="btnSignIn.Text" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="&gt;&gt;btnSignIn.Name" xml:space="preserve">
    <value>btnSignIn</value>
  </data>
  <data name="&gt;&gt;btnSignIn.Type" xml:space="preserve">
    <value>System.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;btnSignIn.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;btnSignIn.ZOrder" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="lblSignInMsg.Location" type="System.Drawing.Point, System.Drawing">
    <value>12, 41</value>
  </data>
  <data name="lblSignInMsg.Size" type="System.Drawing.Size, System.Drawing">
    <value>388, 15</value>
  </data>
  <data name="lblSignInMsg.TabIndex" type="System.Int32, mscorlib">
    <value>6</value>
  </data>
  <data name="lblSignInMsg.Text" xml:space="preserve">
    <value>Your authentication is expired. Re-enter your password to log in again.</value>
  </data>
  <data name="&gt;&gt;lblSignInMsg.Name" xml:space="preserve">
    <value>lblSignInMsg</value>
  </data>
  <data name="&gt;&gt;lblSignInMsg.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;lblSignInMsg.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;lblSignInMsg.ZOrder" xml:space="preserve">
    <value>0</value>
  </data>
  <metadata name="$this.Localizable" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.AutoScaleDimensions" type="System.Drawing.SizeF, System.Drawing">
    <value>7, 15</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>411, 206</value>
  </data>
  <data name="$this.Font" type="System.Drawing.Font, System.Drawing">
    <value>Arial, 9pt</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAEBAAAAEACABoBQAARgAAABAQAAABACAAaAQAAK4FAAAgIAAAAQAIAKgIAAAWCgAAICAAAAEA
        IACoEAAAvhIAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQDgAQz8wAEM/
        MQBENBgARDUZAEQ2GwBFPSkARjYaAEY2GwBGNxsARzccAEc4HABHOB0ARzkdAEc6IQBIOR0ASDkeAEg5
        HwBIOyEASDsiAEk5HgBJOh4ASTofAEk6IABJPCQASjwiAEo8IwBKPSQASz4lAEs+JgBMPycATkErAE5C
        LQBPRDAAUEMsAFBELgBTSTQAU0k2AFRHLwBVTDoAVks3AFpXUQBfW1EAYllJAGJaSQBmYFUAZ2VhAGlj
        VwBqYlMAbGpmAG1oXgBzcGgAdXFpAHZwZQB5dWsAenp5AHx3bgB8fHkAfXx4AH9+fACCgXwAhoR/AJGQ
        jgCVkIcAl5eVAJ6clwCgnpkAoZ6ZAK2sqgCxsrMAsrOyALa2tAC3t7UAurm3AMDAwADFw8AAxcfJAMjG
        wwDOz88A0NHSANHS0wDS0M0A0tTUANnb3ADk5eYA5uXkAOjo6gDy8vIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARcWFhYW
        FhYWFhYWFhYWBhYWFhYWFhYWFhYWFhYWFhYWFhYWFh0bFhYcHRYWFhYWFhYWFhhMThoJSVMiFhYWFhYW
        FhYYUFQwCEtWNRAWFhYWFhYWGE9GPANLSj0MFhYWFhYWFhhPQzMjTUgyKBYWFhYVKB4YT0MlNlFHIDQP
        FhYWDkUmGE9CBUBVRwQ7GRYWFg0+LBhQQQc4V0cHLysWFhYWITcnUj8KJE9ECR86CxYWFhYYKjktDxEx
        Lg8QKRMWFhYWFhUPFBYWDxAWFhQWFhYWFhYWFhYWFhYWFhYWFhYSFhYWFhYWFhYWFhYWFhYXABMWFhYW
        FhYWFhYWFhYWAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAoAAAAEAAAACAAAAABACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQz8wvEk6
        IP9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//RT0p20k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0s+Jv9KPST/STof/0k6H/9LPiX/Sz4m/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k8JP/Fx8n/zs/P/0o8I/9GNxv/urm3/9nb3P9QQyz/STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JPCT/0dLT/+Tl5v9qYlP/RjYb/8XDwP/o6Or/dnBl/0g5
        Hv9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STwk/9DR0v+ys7L/goF8/0Q0GP/Fw8D/wMDA/4aE
        f/9HOB3/STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k8JP/Q0dL/oZ6Z/3NwaP9QRC7/yMbD/7e3
        tf9taF7/Vks3/0k6H/9JOh//STof/0k6H/9JOh7/Vks3/0w/J/9JPCT/0NHS/6Gemf9TSTb/eXVr/9LQ
        zf+2trT/TkIt/3Vxaf9IOR3/STof/0k6H/9JOh//Rzoh/7Gys/9URy//STwk/9DR0v+gnpn/RDYb/5eX
        lf/m5eT/tra0/0Q1Gf9/fnz/Sjwi/0k6H/9JOh//STof/0c5Hf+RkI7/YlpJ/0k8JP/R0tP/npyX/0Y2
        Gv98d27/8vLy/7a2tP9GNhr/aWNX/2JZSf9JOh//STof/0k6H/9JOh//T0Qw/3p6ef9VTDr/0tTU/5WQ
        h/9HNxz/U0k0/9DR0v+trKr/Rjcb/05BK/99fHj/Rzgc/0k6H/9JOh//STof/0k6H/9JPCT/X1tR/3x8
        ef9mYFX/SDkd/0g5H/9samb/Z2Vh/0g5Hf9IOR7/WldR/0g7Iv9JOh//STof/0k6H/9JOh//STof/0k6
        Hv9IOR3/STke/0k6H/9JOh//SDkd/0g5Hv9JOh//STof/0k5Hv9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9IOyH/STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOiD/QEA4i0g7
        Iv9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//Qz8xuQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAoAAAAIAAAAEAAAAABAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADpFRwA6RUkAPS0PAD1D
        QQA+Qz0APy4RAD8vEwBAMBIAQDIYAEBBNgBBQDcAQjEVAEIyFQBCNRwAQzMWAEM0GABDNRoARDQXAEQ0
        GABENRgARDUaAEQ2GwBEPisARD4sAEU1GABFNRkARTYcAEU3HQBFNx4ARTgfAEU4IQBFOiMART0oAEY2
        GQBGNhoARjcaAEY3GwBGNx0ARjgeAEY+LgBHNhoARzcaAEc3GwBHOBwARzkgAEc7IwBHOyQARzslAEc+
        KgBINxsASDgbAEg4HABIOB0ASDkdAEg7IgBIPSkASEM3AEk5HQBJOR4ASToeAEk6HwBJOiAAST0mAEk/
        KgBKOR0ASjkeAEo6HQBKQCsASkAsAEpDNgBLORoASz8oAEs/KgBLQi4ATEErAExCLABMS0cATUEqAE1D
        LgBNRTQATkc7AE9FMgBQRjEAUEYzAFBHNABRSDUAUkg0AFJKOABSUEgAU0o3AFVLOQBVU08AVks3AFdO
        PwBXTz0AV1BCAFdSQwBYUUMAWVFAAFpVSgBcVUcAXVhMAF5SPgBeXFgAX1dGAGBdVwBhV0UAYVpMAGJb
        TQBiXVIAY1lFAGNhXABkWUUAZF9TAGRjXgBlYFUAZmBTAGZhVgBnYVUAZ2JWAGhlXQBpZ2MAamNWAGto
        XwBrbGwAbWheAG1qYwBvbGEAcGxhAHBuZwBxbWMAcW9pAHFydABzcmoAdHV0AHVzbgB2c2wAd3VvAHd2
        cAB6eXQAe3hwAHt5dAB9e3gAfYGEAICAfwCBgX0AgoF+AIKCfgCEg34AhIeLAIWEfwCFhYIAhoSAAIeG
        gQCHiIcAiIaBAIuJgwCLioQAjI2PAI6SlQCQj48AkJCPAJGPigCRk5MAk5aYAJSTjwCUlJEAlJebAJWV
        kgCWl5oAl5iYAJeZnACYmJgAmJudAJmamwCZm58AmZyfAJmcoACanJ4AmpygAJucnQCbn6AAnZ6gAJ2f
        oACem5QAn5yVAJ+ipgCgnZYAoKGgAKKelwCio6MAoqWoAKSlqACmo5wApqeoAKmsrQCqrK4Aq66xAK6q
        ogCvsrQAsbO0ALKztQCytLUAsrS2ALS2twC2sKgAt7q7ALm8vQC6vL4Av7u0AMHBwwDCwsQAwsXHAMbJ
        ywDIy84AycnLAMrO0QDOztAA0NHTANDS1ADT1NUA1NfbANXV1QDW19gA1tncANjZ2gDa29wA3N3eAN3d
        3QDh4uMA4+PjAOXl5gDl5ucA5ufoAOfn5wDn6OkA6OjqAOrq7ADr7O0A7O3uAO3t7QDu7u4A7/DxAPDw
        8ADx8fIA8vLyAPb29gD29/gA+Pf3APj4+AD6+voA/Pz8AP39/gD+/v4AAAAAAAALLzw9PT09PT09PT09
        PT09PT09PT09PT09PT09PRgABUE8PT09PT09PT09PT09PT09PT09PT09PT09PT09Rxc9PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
        PT09PTQqKTY9PT09NCojND09PT09PT09PT09PT09PT09PT0+TFVVPzY9PTtEVFZLNT09PT09PT09PT09
        PT09PT09NECx3N6mETw9E53Z4cRIND09PT09PT09PT09PT09PT00Rc35/txbIj0PvPX+6nsPPT09PT09
        PT09PT09PT09PTREyfb36I0NPQ+57/ruqRA9PT09PT09PT09PT09PT09NETJ9PLWvy42D7nu9dnIVCU9
        PT09PT09PT09PT09PT00RMry66DAbBoPue7ytr2BEj09PT09PT09PT09PT09PTREy/LmhpKUFQ+67u6e
        iaIePD09PT09PT09PT09PT09NETL8uR1Za5TCL7u7Jxasl8jPT09PT09PT09PT09PT00RMvy43cgpYMD
        wvDqmgmbiBM9PT09PT09PT09KxM2PTREy/LjeAeLqw7H8+qZBnmkSDY9PT09PT09PSxXjGIrNETL8uN2
        CGDGac746pkIUqhtGT09PT09PT08HafXbxQ0RMvy43YPMLWj0v3qlw8ckZMWPT09PT09PTQxuNhxEzRE
        y/LjdhMQitHk/uqXDyJusFQrPT09PT09PB6Y04APNEXM8eJ0EyJe0fL87JcPM0+sfhM9PT09PT09ImTB
        oiYiSs/y4HITOiCt5/vtlw89Fo+hLTw9PT09PT08J3q0fAxM1fTdaxM9EILb9umVDz0iZrtjIj09PT09
        PT02H2iWf2HQ5dRnGj0jWMXf2o4TPTRJn4QaPT09PT09PT06G1F9kK/Dql0kPTwfh7ezcyM9PSVwhTA6
        PT09PT09PT09Mh5QWWpqTjY9PTRGXFw5Oj09OihNODo9PT09PT09PT09PDMrJCs7PT09PTQrKzY9PT09
        OjQ8PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PD09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT0hPD09PT09PT09PT09PT09PT09PT09PT09PT09PT08NwEwPD09PT09PT09PT09
        PT09PT09PT09PT09PT09PUMKAAIYQj09PT09PT09PT09PT09PT09PT09PT09PTw+BACAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAASgA
        AAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/QTo9QUA3y0c7JP9JOh7/STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9EPizzP0I7fj5DPelKOR3/SToe/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0s5Gv9EPiv7STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        Hv9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9IOBz/Rzca/0c2
        Gv9IOR3/STof/0k6H/9JOh//STof/0g4HP9HNxr/RjYa/0g4HP9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STog/0xC
        Lf9QRzT/UEc0/0k9Jv9IOR3/STof/0k6H/9JOR7/S0Ar/1BHM/9RSDX/TEEr/0g4Hf9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0g4
        HP9JPyr/mZyf/9DT1f/U19v/lJOP/0M1Gv9JOh7/STof/0Q0GP+LiYP/ys7R/9bZ3P+prK3/Sz8o/0g4
        HP9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//SDgc/0pALP+0trf/+Pf3//7+/v/Q0tT/VUs5/0Y2Gf9JOh//QzMX/6Cdlv/x8fL///7+/+bn
        6f9qY1b/QzMX/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9IOBz/SkAr/7GztP/y8vL/9vb2/+Xl5v97eHD/QjIV/0k6H/9DMxf/npuU/+vs
        7f/4+Pj/6+rs/5WVkv9DNBn/STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0g4HP9KQCv/sbO0//Dw8P/v7+//xsnL/6Kjo/9HOyP/SDkd/0Mz
        F/+fm5T/6uvs//Hx8f/LztH/r7K0/1FGM/9GNxv/STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//SDgc/0pAK/+ys7X/7+/v/+fn5/+OkpX/oqWo/2Fa
        TP9FNRn/QzMX/5+blP/q6uz/7u7u/5ufoP+goaD/cGxh/0Q0F/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9IOBz/SkAr/7K0tf/u7u7/4eLj/3Ny
        av+BgX3/goJ+/0Q1Gv9DMxf/n5yV/+rr7P/q6uz/i4qE/3ZzbP+QkI//Rjgf/0k6Hv9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0g4HP9KQCv/srS1/+7u
        7v/c3d7/ZmBT/1xVR/+Ym53/UEYx/0EwE/+inpf/6uvs/+fo6f+IhoH/U0o3/5mcoP9XTz3/RjYa/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//SDgc/0pA
        K/+ytLX/7u7u/9rb3P9nYVX/RToj/5OWmP9xbWP/PS0P/6ajnP/s7e7/5ufo/4eGgf9AMhj/h4iH/3Vz
        bv9ENBj/STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0c3G/9ENBj/SDkd/0k6
        H/9IOBz/SkAr/7K0tf/u7u7/2tvc/2diVv8/LxP/d3Zw/5eYmP9CNRz/rqqi/+/w8f/m5+j/hoSA/z8u
        Ef9oZV3/kZOT/0s/KP9IOR3/STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9HOBz/Ukg0/3p5
        dP9YUUP/Rzcb/0g4HP9KQCv/srS1/+7u7v/a29z/Z2FW/0AwEv9XUEL/q66x/19XRv+2sKj/9vf4/+bn
        6P+GhID/QTET/09FMv+Ul5v/YltN/0U1GP9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//SToe/0U3
        Hv+UlJH/yMvO/2NZRf9ENRj/SDgc/0pAK/+ytLX/7u7u/9rb3P9nYVb/QzMV/0c7Jf+bnJ3/kY+K/7+7
        tP/9/f7/5ufo/4WEf/9DMxb/RTcd/4CAf/+CgX7/RTYb/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9IOBz/Rz4q/52foP/Jycv/ZFlF/0Q0GP9IOBz/SkAr/7K0tf/u7u7/2tvc/2ZhVv9ENBj/QzQY/3d1
        b/+6vL7/3N3e///+/v/m5+j/hYR//0MzF/9GNhn/Yl1S/5mbn/9RRzP/Rzcb/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6Hv9FOB//hYWC/8HBw/9vbGH/QzMX/0g4HP9KQCz/srS2/+3t7f/Y2dr/ZWBV/0Q0
        GP9GNhn/V04//7u9v//u7u///Pz8/+fn6f+FhH//QzMX/0g4G/9NQy7/l5mc/21oXv9ENBj/STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0Y2Gf9aVUr/pKWo/5GRj/9GNx3/RzYZ/0tCLv+3urv/7+7u/9bX
        2P9kX1P/RDQY/0k5Hf9FOiP/mJiY/+Pj4//6+vr/6Ojq/4WEf/9DMxf/STof/0Q2G/99e3j/kI+P/0c5
        IP9JOh7/STof/0k6H/9JOh//STof/0k6H/9JOh//SToe/0Y4Hv9pZ2P/mpyg/2toX/9CMRX/TEIs/8LF
        x//x8PD/09TV/2FXRf9ENBj/STof/0M0GP9wbmf/0NHT//Ly8v/l5uf/hIN+/0MzF/9JOh//RjYZ/11Y
        TP+foqb/WVFA/0Y2Gf9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//SDkd/0U4If9eXFj/hIeL/21q
        Y/9XUkP/uby9/93d3f/CwsT/XlI+/0U1Gf9JOh//RjYa/1JKOP+qrK7/1dXV/87O0P97eXT/RDQY/0k6
        H/9IOBz/Sz8q/4yNj/9xb2n/RTUZ/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STkd/0U2
        HP9ORzv/a2xs/32BhP+Zmpv/pqeo/5aXmv9WSzf/Rjca/0k6H/9JOh7/RTgh/3R1dP+dnqD/mpye/2Rj
        Xv9GNhr/STof/0k6H/9GNxv/Y2Fc/3FydP9HOyX/STkd/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0g3G/9FOB//TUU0/1JQSP9gXVf/YF1X/01BKv9IOR3/STof/0k6H/9IOBz/SkM2/1VT
        T/9VU0//SEM3/0k5Hf9JOh//STof/0k5Hf9GPi7/TEtH/0g9Kf9JOR3/STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6Hv9IOBv/Rzcb/0Y3Gv9HNxv/STke/0k6H/9JOh//STof/0k6
        H/9IOBz/Rzcb/0c3G/9IOR3/STof/0k6H/9JOh//STof/0k5Hf9IOBz/SToe/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6Hv9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//RT0o/0k6Hv9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//SToe/0g7Iv86RUeWRzsl+Uk6Hv9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9KOh3/QEE2y0c8Jgc6RUmURD4s/0o5
        Hv9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6
        H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh//STof/0k6H/9JOh7/STog/z1DQeJAQTo5AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Waveface Sign-in</value>
  </data>
  <data name="&gt;&gt;$this.Name" xml:space="preserve">
    <value>SignInForm</value>
  </data>
  <data name="&gt;&gt;$this.Type" xml:space="preserve">
    <value>System.Windows.Forms.Form, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
</root>